# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server.models.gorm_deleted_at import GormDeletedAt
from openapi_server import util


class ModelsContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, app_id: int=None, auto_sponsor: bool=None, base_uri: str=None, chain_id: int=None, chain_type: int=None, created_at: str=None, deleted_at: GormDeletedAt=None, error: str=None, hash: str=None, id: int=None, name: str=None, owner_address: str=None, royalties_address: str=None, royalties_bps: int=None, status: int=None, symbol: str=None, tokens_burnable: bool=None, tokens_transferable_by_admin: bool=None, tokens_transferable_by_user: bool=None, transfer_cooldown_time: int=None, tx_id: int=None, type: int=None, updated_at: str=None):
        """ModelsContract - a model defined in OpenAPI

        :param address: The address of this ModelsContract.
        :param app_id: The app_id of this ModelsContract.
        :param auto_sponsor: The auto_sponsor of this ModelsContract.
        :param base_uri: The base_uri of this ModelsContract.
        :param chain_id: The chain_id of this ModelsContract.
        :param chain_type: The chain_type of this ModelsContract.
        :param created_at: The created_at of this ModelsContract.
        :param deleted_at: The deleted_at of this ModelsContract.
        :param error: The error of this ModelsContract.
        :param hash: The hash of this ModelsContract.
        :param id: The id of this ModelsContract.
        :param name: The name of this ModelsContract.
        :param owner_address: The owner_address of this ModelsContract.
        :param royalties_address: The royalties_address of this ModelsContract.
        :param royalties_bps: The royalties_bps of this ModelsContract.
        :param status: The status of this ModelsContract.
        :param symbol: The symbol of this ModelsContract.
        :param tokens_burnable: The tokens_burnable of this ModelsContract.
        :param tokens_transferable_by_admin: The tokens_transferable_by_admin of this ModelsContract.
        :param tokens_transferable_by_user: The tokens_transferable_by_user of this ModelsContract.
        :param transfer_cooldown_time: The transfer_cooldown_time of this ModelsContract.
        :param tx_id: The tx_id of this ModelsContract.
        :param type: The type of this ModelsContract.
        :param updated_at: The updated_at of this ModelsContract.
        """
        self.openapi_types = {
            'address': str,
            'app_id': int,
            'auto_sponsor': bool,
            'base_uri': str,
            'chain_id': int,
            'chain_type': int,
            'created_at': str,
            'deleted_at': GormDeletedAt,
            'error': str,
            'hash': str,
            'id': int,
            'name': str,
            'owner_address': str,
            'royalties_address': str,
            'royalties_bps': int,
            'status': int,
            'symbol': str,
            'tokens_burnable': bool,
            'tokens_transferable_by_admin': bool,
            'tokens_transferable_by_user': bool,
            'transfer_cooldown_time': int,
            'tx_id': int,
            'type': int,
            'updated_at': str
        }

        self.attribute_map = {
            'address': 'address',
            'app_id': 'app_id',
            'auto_sponsor': 'auto_sponsor',
            'base_uri': 'base_uri',
            'chain_id': 'chain_id',
            'chain_type': 'chain_type',
            'created_at': 'created_at',
            'deleted_at': 'deleted_at',
            'error': 'error',
            'hash': 'hash',
            'id': 'id',
            'name': 'name',
            'owner_address': 'owner_address',
            'royalties_address': 'royalties_address',
            'royalties_bps': 'royalties_bps',
            'status': 'status',
            'symbol': 'symbol',
            'tokens_burnable': 'tokens_burnable',
            'tokens_transferable_by_admin': 'tokens_transferable_by_admin',
            'tokens_transferable_by_user': 'tokens_transferable_by_user',
            'transfer_cooldown_time': 'transfer_cooldown_time',
            'tx_id': 'tx_id',
            'type': 'type',
            'updated_at': 'updated_at'
        }

        self._address = address
        self._app_id = app_id
        self._auto_sponsor = auto_sponsor
        self._base_uri = base_uri
        self._chain_id = chain_id
        self._chain_type = chain_type
        self._created_at = created_at
        self._deleted_at = deleted_at
        self._error = error
        self._hash = hash
        self._id = id
        self._name = name
        self._owner_address = owner_address
        self._royalties_address = royalties_address
        self._royalties_bps = royalties_bps
        self._status = status
        self._symbol = symbol
        self._tokens_burnable = tokens_burnable
        self._tokens_transferable_by_admin = tokens_transferable_by_admin
        self._tokens_transferable_by_user = tokens_transferable_by_user
        self._transfer_cooldown_time = transfer_cooldown_time
        self._tx_id = tx_id
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelsContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The models.Contract of this ModelsContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ModelsContract.


        :return: The address of this ModelsContract.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ModelsContract.


        :param address: The address of this ModelsContract.
        :type address: str
        """

        self._address = address

    @property
    def app_id(self):
        """Gets the app_id of this ModelsContract.


        :return: The app_id of this ModelsContract.
        :rtype: int
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this ModelsContract.


        :param app_id: The app_id of this ModelsContract.
        :type app_id: int
        """

        self._app_id = app_id

    @property
    def auto_sponsor(self):
        """Gets the auto_sponsor of this ModelsContract.


        :return: The auto_sponsor of this ModelsContract.
        :rtype: bool
        """
        return self._auto_sponsor

    @auto_sponsor.setter
    def auto_sponsor(self, auto_sponsor):
        """Sets the auto_sponsor of this ModelsContract.


        :param auto_sponsor: The auto_sponsor of this ModelsContract.
        :type auto_sponsor: bool
        """

        self._auto_sponsor = auto_sponsor

    @property
    def base_uri(self):
        """Gets the base_uri of this ModelsContract.


        :return: The base_uri of this ModelsContract.
        :rtype: str
        """
        return self._base_uri

    @base_uri.setter
    def base_uri(self, base_uri):
        """Sets the base_uri of this ModelsContract.


        :param base_uri: The base_uri of this ModelsContract.
        :type base_uri: str
        """

        self._base_uri = base_uri

    @property
    def chain_id(self):
        """Gets the chain_id of this ModelsContract.


        :return: The chain_id of this ModelsContract.
        :rtype: int
        """
        return self._chain_id

    @chain_id.setter
    def chain_id(self, chain_id):
        """Sets the chain_id of this ModelsContract.


        :param chain_id: The chain_id of this ModelsContract.
        :type chain_id: int
        """

        self._chain_id = chain_id

    @property
    def chain_type(self):
        """Gets the chain_type of this ModelsContract.


        :return: The chain_type of this ModelsContract.
        :rtype: int
        """
        return self._chain_type

    @chain_type.setter
    def chain_type(self, chain_type):
        """Sets the chain_type of this ModelsContract.


        :param chain_type: The chain_type of this ModelsContract.
        :type chain_type: int
        """

        self._chain_type = chain_type

    @property
    def created_at(self):
        """Gets the created_at of this ModelsContract.


        :return: The created_at of this ModelsContract.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ModelsContract.


        :param created_at: The created_at of this ModelsContract.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this ModelsContract.


        :return: The deleted_at of this ModelsContract.
        :rtype: GormDeletedAt
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this ModelsContract.


        :param deleted_at: The deleted_at of this ModelsContract.
        :type deleted_at: GormDeletedAt
        """

        self._deleted_at = deleted_at

    @property
    def error(self):
        """Gets the error of this ModelsContract.


        :return: The error of this ModelsContract.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ModelsContract.


        :param error: The error of this ModelsContract.
        :type error: str
        """

        self._error = error

    @property
    def hash(self):
        """Gets the hash of this ModelsContract.


        :return: The hash of this ModelsContract.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this ModelsContract.


        :param hash: The hash of this ModelsContract.
        :type hash: str
        """

        self._hash = hash

    @property
    def id(self):
        """Gets the id of this ModelsContract.


        :return: The id of this ModelsContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ModelsContract.


        :param id: The id of this ModelsContract.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ModelsContract.


        :return: The name of this ModelsContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ModelsContract.


        :param name: The name of this ModelsContract.
        :type name: str
        """

        self._name = name

    @property
    def owner_address(self):
        """Gets the owner_address of this ModelsContract.


        :return: The owner_address of this ModelsContract.
        :rtype: str
        """
        return self._owner_address

    @owner_address.setter
    def owner_address(self, owner_address):
        """Sets the owner_address of this ModelsContract.


        :param owner_address: The owner_address of this ModelsContract.
        :type owner_address: str
        """

        self._owner_address = owner_address

    @property
    def royalties_address(self):
        """Gets the royalties_address of this ModelsContract.


        :return: The royalties_address of this ModelsContract.
        :rtype: str
        """
        return self._royalties_address

    @royalties_address.setter
    def royalties_address(self, royalties_address):
        """Sets the royalties_address of this ModelsContract.


        :param royalties_address: The royalties_address of this ModelsContract.
        :type royalties_address: str
        """

        self._royalties_address = royalties_address

    @property
    def royalties_bps(self):
        """Gets the royalties_bps of this ModelsContract.


        :return: The royalties_bps of this ModelsContract.
        :rtype: int
        """
        return self._royalties_bps

    @royalties_bps.setter
    def royalties_bps(self, royalties_bps):
        """Sets the royalties_bps of this ModelsContract.


        :param royalties_bps: The royalties_bps of this ModelsContract.
        :type royalties_bps: int
        """

        self._royalties_bps = royalties_bps

    @property
    def status(self):
        """Gets the status of this ModelsContract.

        0-pending, 1-success, 2-failed

        :return: The status of this ModelsContract.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ModelsContract.

        0-pending, 1-success, 2-failed

        :param status: The status of this ModelsContract.
        :type status: int
        """

        self._status = status

    @property
    def symbol(self):
        """Gets the symbol of this ModelsContract.


        :return: The symbol of this ModelsContract.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this ModelsContract.


        :param symbol: The symbol of this ModelsContract.
        :type symbol: str
        """

        self._symbol = symbol

    @property
    def tokens_burnable(self):
        """Gets the tokens_burnable of this ModelsContract.


        :return: The tokens_burnable of this ModelsContract.
        :rtype: bool
        """
        return self._tokens_burnable

    @tokens_burnable.setter
    def tokens_burnable(self, tokens_burnable):
        """Sets the tokens_burnable of this ModelsContract.


        :param tokens_burnable: The tokens_burnable of this ModelsContract.
        :type tokens_burnable: bool
        """

        self._tokens_burnable = tokens_burnable

    @property
    def tokens_transferable_by_admin(self):
        """Gets the tokens_transferable_by_admin of this ModelsContract.


        :return: The tokens_transferable_by_admin of this ModelsContract.
        :rtype: bool
        """
        return self._tokens_transferable_by_admin

    @tokens_transferable_by_admin.setter
    def tokens_transferable_by_admin(self, tokens_transferable_by_admin):
        """Sets the tokens_transferable_by_admin of this ModelsContract.


        :param tokens_transferable_by_admin: The tokens_transferable_by_admin of this ModelsContract.
        :type tokens_transferable_by_admin: bool
        """

        self._tokens_transferable_by_admin = tokens_transferable_by_admin

    @property
    def tokens_transferable_by_user(self):
        """Gets the tokens_transferable_by_user of this ModelsContract.


        :return: The tokens_transferable_by_user of this ModelsContract.
        :rtype: bool
        """
        return self._tokens_transferable_by_user

    @tokens_transferable_by_user.setter
    def tokens_transferable_by_user(self, tokens_transferable_by_user):
        """Sets the tokens_transferable_by_user of this ModelsContract.


        :param tokens_transferable_by_user: The tokens_transferable_by_user of this ModelsContract.
        :type tokens_transferable_by_user: bool
        """

        self._tokens_transferable_by_user = tokens_transferable_by_user

    @property
    def transfer_cooldown_time(self):
        """Gets the transfer_cooldown_time of this ModelsContract.


        :return: The transfer_cooldown_time of this ModelsContract.
        :rtype: int
        """
        return self._transfer_cooldown_time

    @transfer_cooldown_time.setter
    def transfer_cooldown_time(self, transfer_cooldown_time):
        """Sets the transfer_cooldown_time of this ModelsContract.


        :param transfer_cooldown_time: The transfer_cooldown_time of this ModelsContract.
        :type transfer_cooldown_time: int
        """

        self._transfer_cooldown_time = transfer_cooldown_time

    @property
    def tx_id(self):
        """Gets the tx_id of this ModelsContract.


        :return: The tx_id of this ModelsContract.
        :rtype: int
        """
        return self._tx_id

    @tx_id.setter
    def tx_id(self, tx_id):
        """Sets the tx_id of this ModelsContract.


        :param tx_id: The tx_id of this ModelsContract.
        :type tx_id: int
        """

        self._tx_id = tx_id

    @property
    def type(self):
        """Gets the type of this ModelsContract.

        1-ERC721, 2-ERC1155

        :return: The type of this ModelsContract.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ModelsContract.

        1-ERC721, 2-ERC1155

        :param type: The type of this ModelsContract.
        :type type: int
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this ModelsContract.


        :return: The updated_at of this ModelsContract.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ModelsContract.


        :param updated_at: The updated_at of this ModelsContract.
        :type updated_at: str
        """

        self._updated_at = updated_at
