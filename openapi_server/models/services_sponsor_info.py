# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ServicesSponsorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collateral_sponsor: str=None, collateral_sponsor_balance: str=None, gas_sponsor: str=None, gas_sponsor_balance: str=None, gas_upper_bound: str=None, is_all_white_listed: bool=None):
        """ServicesSponsorInfo - a model defined in OpenAPI

        :param collateral_sponsor: The collateral_sponsor of this ServicesSponsorInfo.
        :param collateral_sponsor_balance: The collateral_sponsor_balance of this ServicesSponsorInfo.
        :param gas_sponsor: The gas_sponsor of this ServicesSponsorInfo.
        :param gas_sponsor_balance: The gas_sponsor_balance of this ServicesSponsorInfo.
        :param gas_upper_bound: The gas_upper_bound of this ServicesSponsorInfo.
        :param is_all_white_listed: The is_all_white_listed of this ServicesSponsorInfo.
        """
        self.openapi_types = {
            'collateral_sponsor': str,
            'collateral_sponsor_balance': str,
            'gas_sponsor': str,
            'gas_sponsor_balance': str,
            'gas_upper_bound': str,
            'is_all_white_listed': bool
        }

        self.attribute_map = {
            'collateral_sponsor': 'collateral_sponsor',
            'collateral_sponsor_balance': 'collateral_sponsor_balance',
            'gas_sponsor': 'gas_sponsor',
            'gas_sponsor_balance': 'gas_sponsor_balance',
            'gas_upper_bound': 'gas_upper_bound',
            'is_all_white_listed': 'is_all_white_listed'
        }

        self._collateral_sponsor = collateral_sponsor
        self._collateral_sponsor_balance = collateral_sponsor_balance
        self._gas_sponsor = gas_sponsor
        self._gas_sponsor_balance = gas_sponsor_balance
        self._gas_upper_bound = gas_upper_bound
        self._is_all_white_listed = is_all_white_listed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServicesSponsorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The services.SponsorInfo of this ServicesSponsorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collateral_sponsor(self):
        """Gets the collateral_sponsor of this ServicesSponsorInfo.


        :return: The collateral_sponsor of this ServicesSponsorInfo.
        :rtype: str
        """
        return self._collateral_sponsor

    @collateral_sponsor.setter
    def collateral_sponsor(self, collateral_sponsor):
        """Sets the collateral_sponsor of this ServicesSponsorInfo.


        :param collateral_sponsor: The collateral_sponsor of this ServicesSponsorInfo.
        :type collateral_sponsor: str
        """

        self._collateral_sponsor = collateral_sponsor

    @property
    def collateral_sponsor_balance(self):
        """Gets the collateral_sponsor_balance of this ServicesSponsorInfo.


        :return: The collateral_sponsor_balance of this ServicesSponsorInfo.
        :rtype: str
        """
        return self._collateral_sponsor_balance

    @collateral_sponsor_balance.setter
    def collateral_sponsor_balance(self, collateral_sponsor_balance):
        """Sets the collateral_sponsor_balance of this ServicesSponsorInfo.


        :param collateral_sponsor_balance: The collateral_sponsor_balance of this ServicesSponsorInfo.
        :type collateral_sponsor_balance: str
        """

        self._collateral_sponsor_balance = collateral_sponsor_balance

    @property
    def gas_sponsor(self):
        """Gets the gas_sponsor of this ServicesSponsorInfo.


        :return: The gas_sponsor of this ServicesSponsorInfo.
        :rtype: str
        """
        return self._gas_sponsor

    @gas_sponsor.setter
    def gas_sponsor(self, gas_sponsor):
        """Sets the gas_sponsor of this ServicesSponsorInfo.


        :param gas_sponsor: The gas_sponsor of this ServicesSponsorInfo.
        :type gas_sponsor: str
        """

        self._gas_sponsor = gas_sponsor

    @property
    def gas_sponsor_balance(self):
        """Gets the gas_sponsor_balance of this ServicesSponsorInfo.


        :return: The gas_sponsor_balance of this ServicesSponsorInfo.
        :rtype: str
        """
        return self._gas_sponsor_balance

    @gas_sponsor_balance.setter
    def gas_sponsor_balance(self, gas_sponsor_balance):
        """Sets the gas_sponsor_balance of this ServicesSponsorInfo.


        :param gas_sponsor_balance: The gas_sponsor_balance of this ServicesSponsorInfo.
        :type gas_sponsor_balance: str
        """

        self._gas_sponsor_balance = gas_sponsor_balance

    @property
    def gas_upper_bound(self):
        """Gets the gas_upper_bound of this ServicesSponsorInfo.


        :return: The gas_upper_bound of this ServicesSponsorInfo.
        :rtype: str
        """
        return self._gas_upper_bound

    @gas_upper_bound.setter
    def gas_upper_bound(self, gas_upper_bound):
        """Sets the gas_upper_bound of this ServicesSponsorInfo.


        :param gas_upper_bound: The gas_upper_bound of this ServicesSponsorInfo.
        :type gas_upper_bound: str
        """

        self._gas_upper_bound = gas_upper_bound

    @property
    def is_all_white_listed(self):
        """Gets the is_all_white_listed of this ServicesSponsorInfo.


        :return: The is_all_white_listed of this ServicesSponsorInfo.
        :rtype: bool
        """
        return self._is_all_white_listed

    @is_all_white_listed.setter
    def is_all_white_listed(self, is_all_white_listed):
        """Sets the is_all_white_listed of this ServicesSponsorInfo.


        :param is_all_white_listed: The is_all_white_listed of this ServicesSponsorInfo.
        :type is_all_white_listed: bool
        """

        self._is_all_white_listed = is_all_white_listed
