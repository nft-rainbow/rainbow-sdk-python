# coding: utf-8

"""
    Rainbow-API

    The responses of the open api in swagger focus on the data field rather than the code and the message fields  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rainbowsdk
from rainbowsdk.models.services_contract_deploy_dto import ServicesContractDeployDto  # noqa: E501
from rainbowsdk.rest import ApiException

class TestServicesContractDeployDto(unittest.TestCase):
    """ServicesContractDeployDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ServicesContractDeployDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rainbowsdk.models.services_contract_deploy_dto.ServicesContractDeployDto()  # noqa: E501
        if include_optional :
            return ServicesContractDeployDto(
                auto_sponsor = True, 
                base_uri = '', 
                chain = 'conflux', 
                is_sponsor_for_all_user = True, 
                name = '', 
                owner_address = '', 
                royalties_address = '', 
                royalties_bps = 56, 
                symbol = '', 
                tokens_burnable = True, 
                tokens_transferable_by_admin = True, 
                tokens_transferable_by_user = True, 
                transfer_cooldown_time = 56, 
                type = 'erc721'
            )
        else :
            return ServicesContractDeployDto(
                chain = 'conflux',
                name = '',
                symbol = '',
                type = 'erc721',
        )

    def testServicesContractDeployDto(self):
        """Test ServicesContractDeployDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
